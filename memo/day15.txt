Map
데이터의 순서를 보장하지 않음.
데이터를 Key와 Value 한 쌍으로 저장하여 Key로 데이터에 접근할 수 있음.

구현 클래스
	HashMap

JSON(JavaScript Object Notation)
	데이터를 표현하는 방법임.(단순 텍스트)
	데이터를 저장, 전송할 때 많이 사용되는 표기법임.
	기존에 XML, csv를 많이 사용했지만 이제는 이해하기도 쉽고 용량도 작은 JSON을 많이 사용함.

JSON의 종류
	- JSON 객체
	{"key1" : value1, "key2" : value2, ...}

	- JSON 배열
	[
		{"key1" : value1, "key2" : value2, ...},
		{"key1" : value1, "key2" : value2, ...},
		....
	]

Map과 JSON의 관계
	JSON은 Map과 비슷한 형태로 티와 값 한 쌍으로 이루어져 있음.
	그러므로 Map으로 저장한 데이터를 JSON으로 쉽게 바꿀 수 있음.
	(외부 api를 사용함.)

프로그램
	- 특정 작업을 수행하는 명령어들의 모음
	- 메모리에 할당되지 않은 상태 -> 꺼져있음.

프로세스
	- 실행 중인 프로그램
	- 프로세스는 프로그램을 실행시키기 위한 메모리드의 자원과 쓰레드로 구성됨.
	- 즉, 하나의 프로세스는 하나 이상의 쓰레드를 가지고 있음.

Thread
	하나의 프로세스 내에서 작업을 처리하는 흐름의 단위.
	작업을 처리하는 것.

싱글 쓰레드
	하나의 쓰레드가 작업을 마치면 프로그램이 종료됨.
	쓰레드를 하나만 가지고 있기 때문에 작업을 순차적으로 처리하므로 상대적으로 비효율적임.
	쓰레드는 자원을 사용하는데 싱글 쓰레드는 혼자서 자원을 사용하므로 동기화를 걱정할 필요가 없음.
	따라서 안정성이 높고 설계가 쉬움.

멀티 쓰레드
	메인 쓰레드가 작업을 마치더라도 다른 쓰레드의 작업이 모두 끝나야 프로그램이 종료됨.
	하나의 프로세스에서 여러 작업을 동시에 처리하는 것 처럼 느껴지지만
	사실은 각각의 쓰레드를 매우 빠른 속도로 번갈아가며 실행시켜서 조금씩 처리함.

	쓰레드간 공유하는 자원이 있다면 충돌이 생겨 문제가 발생할 수 있으며
	이런 문제를 동기화(Synchronized)를 통해 해결함.
	안정성이 떨어지고 설계가 굉장히 어려움.

- 멀티 쓰레드 구현 방법
1. Thread 클래스 상속
2. Runnable 인터페이스 구현
	- run()메소드에 쓰레드가 처리할 작업을 재정의 한다.
	- start()메소드로 쓰레드를 실행시킨다.

멀티 쓰레드 관련 메소드
	1. sleep(long millis) : 매개변수로 전달한 시간동안 쓰레드를 멈춤.
	2. join(), join(long millis)
		- 현재 쓰레드의 작업을 멈추고 join을 사용한 쓰레드를 기다림.
		- 매개변수에 값을 전달하지 않으면 현재 쓰레드가 join을 사용한 쓰레드의 작업이 끝날때까지 기다림.
	- 매개변수에 값을 전달하면 해당 시간동안 기다렸다가 현재 쓰레드를 다시 실행함.
	- 보통 먼저 실행시킬 쓰레드에 사용함.

- 동기화(Synchronization)
A쓰레드와 B쓰레드가 작업을 진행할 때 A가 사용중인 자원을 B가 사용하여 변경한다면 
A의 작업 의도와 다르게 결과가 나타날 수 있음.
 이러한 것을 방지하기 위해 하나의 자원을 여러 쓰레드가 동시에 접근하지 못하게 막는것을 동기화라고 함.

- 동기화 영역 만들기
	synchronized(객체명) {...} : 동기화 블럭
	일부 소스코드만 동기화를 걸어줌.

	synchronized 리턴타입 메소드명() {...} : 동기화 메소드
	메소드 전체에 동기화를 걸어줌.
=============================================================================================

파일 입출력
	- 스트림(stream)
	데이터를 주고받는 통로
	데이터는 byte형태로 전송됨.

	- 버퍼(buffer)
	데이터를 전송하거나 받을 때 임시로 저장하는 공간(임시저장공간)

	- 스트림과 버퍼
	데이터를 byte단위로 읽어오면 너무 느리고 데이터가 손실 될 우려가 있기 때문에
	 버퍼라는 임시 저장공간에 저장을 하여
	일정 데이터가 쌓였을 때 한 번에 읽어와 빠르게 사용가능함.

File 클래스
	외부 파일을 자바의 객체로 다룰 수 있게 해주는 클래스.
	외부 파일을 만들거나 외부 파일을 가져올 때 그 파일을 File객체로 만들어서 사용



























































