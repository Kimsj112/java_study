hashCode()
	Object의 hashCode()는 객에의 주소값을 특정 알고리즘을 거쳐서
	정수값으로 반환함.
	자바에서는 equals()를 재정의하면 hashCode()도 재정의하도록
	권장함.
	두 객체의 equals()가 true라면 hashCode()도 동일하게 나오도록
	재정의하는 것을 권장함.

Wrapper Class
	기본 자료형들의 클래스 타입

사용하는 이유
	- 클래스타입은 다양한 메소드를 제공함.
	- 자바에서는 클래스타입이 갖는 이점이 많음.
	예를 들어 api에서 제공하는 메소드는 매개변수로 클래스타입(Object)을 받는 경우가 많음.
	이런 경우에는 기본 자료형을 넘겨줄 수 없으므로 박싱을 해줘야함.

===========================================================================================

알고리즘
	어떤 문제가 발생되었을 때 해결할 수 있는 절차 혹은 순서

자료구조
	수집한 데이터를 저장하고 관리하는 방법

컬렉션 프레임워크 
	많은 데이터를 쉽고 효과적으로 관리할 수 있는 표준화된 방법을 제공하는 클래스들의 집합.

1. List 인터페이스
	데이터의 순서를 보장함.
	중복된 값을 허용함.
	
	- List 구현 클래스
	1) Vector
	용량 관리, 보안성 강화, 처리량 감소
	 -> 예전에 사용하던 클래스 지금은 사용x(자바기준)

	2) LinkedList
	추가, 삭제는 빠르지만 탐색이 상대적으로 느림.

	3) ArrayList
	배열과 동일하게 인덱스로 데이터를 관리함.
	컬렉션 클래스 중 가장 많이 사용되는 클래스임.
	추가, 삭제는 상대적으로 느리지만 탐색이 빠름.

2. Set 인터페이스
3. Map 인터페이스